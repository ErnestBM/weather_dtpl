# version: "3.8"

# services:
#   rabbitmq:
#     image: rabbitmq:management
#     container_name: rabbitmq
#     pull_policy: build
#     ports:
#       - "5672:5672"
#       - "15672:15672"
#     healthcheck:
#       test: ["CMD", "rabbitmq-diagnostics", "ping"]
#       interval: 5s
#       timeout: 5s
#       retries: 5
#     networks:
#       data-station-network:
#         ipv4_address: 172.20.14.86

#   weather-producer-rabbit:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: weather_producer_rabbit
#     pull_policy: build
#     environment:
#       - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
#       - PYTHONPATH=/app
#     depends_on:
#       rabbitmq:
#         condition: service_healthy
#     command: python app/rabbitmq_publisher.py
#     healthcheck:
#       test: ["CMD", "python", "-c", "import pika"]
#       interval: 5s
#       retries: 3
#       timeout: 5s
#     networks:
#       data-station-network:
#         ipv4_address: 172.20.14.87

#   weather-consumer-rabbit:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: weather_consumer_rabbit
#     pull_policy: build
#     environment:
#       - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
#       - PYTHONPATH=/app
#       - RABBITMQ_HOST=rabbitmq
#     depends_on:
#       rabbitmq:
#         condition: service_healthy
#       weather-producer-rabbit:
#         condition: service_healthy
#     command: python app/rabbitmq_consumer.py
#     networks:
#       data-station-network:
#         ipv4_address: 172.20.14.88

# networks:
#   data-station-network:
#     external: true

version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    pull_policy: build
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - weather-network

  weather-producer-rabbit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: weather_producer_rabbit
    pull_policy: build
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - PYTHONPATH=/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: python app/rabbitmq_publisher.py
    healthcheck:
      test: ["CMD", "python", "-c", "import pika"]
      interval: 5s
      retries: 3
      timeout: 5s
    networks:
      - weather-network

  weather-consumer-rabbit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: weather_consumer_rabbit
    pull_policy: build
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - PYTHONPATH=/app
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      weather-producer-rabbit:
        condition: service_healthy
    command: python app/rabbitmq_consumer.py
    networks:
      - weather-network

networks:
  weather-network:
    driver: bridge
